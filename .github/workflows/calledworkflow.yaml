name: CalledWorkflow

on:
  repository_dispatch:
    types: [CalledWorkflow]
    
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      parameter1: ${{ github.event.client_payload.parameter1 }} #this parameter will reached by caller workflow
      parameter2: ${{ github.event.client_payload.parameter2 }}
      image_name_tag: ${{github.event.client_payload.image_name_tag }}
      branch_name: ${{ github.event.client_payload.branch_name }}
      values_yaml_path: ${{ github.event.client_payload.values_yaml_path }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo hello ashraf test passed

      - name: Display Branch Name of Caller_repo
        run: |
          echo ****branch_name****
          echo "Branch Name: ${{ env.branch_name }}"

      - name: Check if branch exists
        id: check_branch
        run: |
          if git show-ref --quiet "refs/heads/${{ env.branch_name }}"; then
            echo "Branch ${{ env.branch_name }} exists."
          else
            echo "Branch ${{ env.branch_name }} does not exist."
            echo "Creating branch ${{ env.branch_name }}..."
            git checkout -b ${{ env.branch_name }}
            git push origin ${{ env.branch_name }}
          fi

      - name: Run a multi-line script
        run: |
          echo add other actions to build,
          echo test, and deploy your project
          echo $parameter1 
          #this parameters will be featching from the called workflow
          echo $parameter2
          echo $image_name_tag
          echo "cross checking: $branch_name"
          echo "checking the path which i passed from the caller repo: $values_yaml_path"

      - name: Update values.yaml
        run: |
          # # Extract tag from env.image_name_tag
          # tag=$(echo "${{ env.image_name_tag }}" | cut -d: -f2)
          # # Replace "tag" with the current tag in the imageTag field
          # sed -i "s/imageTag: my_testapp_nov:latest/imageTag: my_testapp_nov:${tag}/" values.yaml
          # echo below is the updated values.yaml file
          # cat values.yaml
          ####
          # Extract tag from env.image_name_tag
          tag=$(echo "${{ env.image_name_tag }}" | cut -d: -f2)
          # Replace "tag" with the current tag in the imageTag field
          sed -i "s/imageTag: my_testapp_nov:latest/imageTag: my_testapp_nov:${tag}/" "${{ env.values_yaml_path }}"
          # Display the updated values.yaml file
          cat "${{ env.values_yaml_path }}"
        
          
          
